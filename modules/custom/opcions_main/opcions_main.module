<?php

use \Drupal\node\Entity\Node;
use \Drupal\node\Entity\NodeType;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use \Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_entity_extra_field_info().
 */
function opcions_main_entity_extra_field_info() {
    $extra = array();

    if ($bundle = NodeType::load('article')) {
        $extra['node'][$bundle->Id()]['display']['opcions_collection'] = [
            'label' => t('Guide / Collection'),
            'description' => t('The guide and or collections this article belongs to'),
            'weight' => 0,
            'visible' => FALSE,
        ];
    }

    if ($bundle = NodeType::load('guia')) {
        $extra['node'][$bundle->Id()]['display']['opcions_changelog'] = [
            'label' => t('Changelog'),
            'description' => t('The guide changelog based on the guide articles\' changelog'),
            'weight' => 0,
            'visible' => FALSE,
        ];
    }

    return $extra;
}


/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function opcions_main_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
    $service = "opcions.main.${form_id}.alter";
    if(Drupal::hasService($service)) {
        Drupal::service($service)->alter($form, $form_state);
    }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function opcions_main_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

    $article_id = $entity->id();

    if ($display->getComponent('opcions_collection')) {

        // find the paragraphs that point to this article
        $paragraph_ids = \Drupal::entityQuery('paragraph')
            ->condition('field_node_reference', $article_id)
            ->execute();

        if($paragraph_id = reset($paragraph_ids)){
            // if we have a paragraph, get the collection it is attached to
            $collection_ids = \Drupal::entityQuery('node')
              ->condition('type', 'guia')
              ->condition('field_collection', $paragraph_id)
              ->execute();

            if ( $id = reset($collection_ids) ) {
                // if we find the collection load it to get all other paragraphs
                $collection = Node::load($id);
                $items = [];
                foreach ($collection->get('field_collection')->referencedEntities() as $paragraph) {
                    foreach ($paragraph->field_node_reference->referencedEntities() as $article) {
                        $items[] = $article->id() == $article_id ? $article->getTitle() : $article->link();
                    }
                }

                $build['opcions_collection'] = [
                    '#theme' => 'item_list',
                    '#list_type' => 'ol',
                    '#items' => $items,
                    '#title' => t('You are reading the guide about @shortname', ['@shortname' => strtolower($collection->get('field_shortname')->getString())]),
                ];
            }
        }

    }

    // @TODO: move to using paragraphs FALSE until then
    if (FALSE && $display->getComponent('opcions_changelog')) {

        $guia = $entity;

        $changelog = [];
        foreach ($guia->get('field_article_reference')->referencedEntities() as $article) {
            foreach ($article->get('field_article_changelog') as $field ) {

                $changelog[] = $field->view();

            }
        }

        $build['opcions_changelog'] = [
            '#theme' => 'item_list',
            '#list_type' => 'ul',
            '#items' => $changelog,
        ];

    }

}
