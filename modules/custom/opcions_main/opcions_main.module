<?php

use \Drupal\node\Entity\Node;
use \Drupal\node\Entity\NodeType;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_entity_extra_field_info().
 */
function opcions_main_entity_extra_field_info() {
    $extra = array();

    if ($bundle = NodeType::load('article')) {
        $extra['node'][$bundle->Id()]['display']['opcions_collection'] = [
            'label' => t('Guide / Collection'),
            'description' => t('The guide and or collections this article belongs to'),
            'weight' => 0,
            'visible' => FALSE,
        ];
    }

    return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function opcions_main_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

    $article_id = $entity->id();

    if ($display->getComponent('opcions_collection')) {

        $collection_ids = \Drupal::entityQuery('node')
            ->condition('type', 'guia')
            ->condition('field_article_reference', $article_id)
            ->execute();

        foreach ( $collection_ids as $collection_id ) {

            $collection = Node::load($collection_id);
            //dpm($collection->get('field_shortname'));

            $items = [];
            foreach ($collection->get('field_article_reference')->referencedEntities() as $article) {

                $items[] = $article->id() == $article_id ? $article->getTitle() : $article->link();
            }

            $build['opcions_collection'] = [
                '#theme' => 'item_list',
                '#list_type' => 'ol',
                '#items' => $items,
                '#title' => t('You are reading the guide about @shortname', ['@shortname' => strtolower($collection->get('field_shortname')->getString())]),
            ];

        }

    }

}
