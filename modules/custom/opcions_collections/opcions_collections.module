<?php

/**
 * @file
 * Contains opcions_collections.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function opcions_collections_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the opcions_collections module.
    case 'help.page.opcions_collections':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Opcions collection tweaks for guides, series and revistas') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_view().
 */
function opcions_collections_paragraph_view_alter(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display)
{
  $alter = 'opcions.collections.' . $entity->bundle() . '.alter';
  if( \Drupal::hasService($alter) ) {
    \Drupal::service($alter)->invoke($build, $entity, $display);
  }
}

/**
 * Implements hook_entity_view().
 */
function opcions_collections_node_view_alter(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display)
{
  $refering = $entity->_referringItem;
  $entity->getEntityTypeId();
  if (!empty($refering->title)) {
    $build['#node']->setTitle($refering->title);
  }
}

/**
 * Implements hook_entity_prepare_view().
 */
function opcions_collections_entity_prepare_view($entity_type_id, array $entities, array $displays, $view_mode)
{
    foreach ($entities as $entity) {
      if( !empty($entity->_referringItem) && !empty($entity->_referringItem->opcions_overrides) ) {
        foreach ($entity->_referringItem->opcions_overrides as $property => $value) {
          $entity->{$property}->value = $value;
        }
      }
    }

}

/**
 * Implements hook_preprocess_HOOK().
 */
function opcions_collections_preprocess_field(&$variables, $hook)
{
  if($variables['element']['#field_name'] == 'field_node_reference') {
    $variables['element']['#test'] = 'hola';
  }
}

/**
 * Implements hook_theme().
 */
function opcions_collections_theme($existing, $type, $theme, $path)
{
  return [
    'paragraph__article_reference_paragraph' => [
      'render element' => 'elements',
      'preprocess functions' => [
        'template_preprocess_paragraph',
        'template_preprocess_collection_item'
      ]
    ]
  ];
}

/**
 * Implements template_preprocess_hook().
 */
function template_preprocess_collection_item(&$variables)
{
  
}